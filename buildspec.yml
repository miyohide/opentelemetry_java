version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - AWS_ACCOUNT_ID=$(echo ${CODEBUILD_BUILD_ARN} | cut -f 5 -d :)
      - $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com)
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Gradle project...
      - ./gradlew clean build -x test
      - echo Building the Docker image...
      - ./gradlew bootBuildImage --imageName=$REPOSITORY_URI:$IMAGE_TAG
      # - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo Pushing the Docker image to ECR...
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
#       - echo Writing image definitions...
#       - printf '[{"name":"springboot-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

# artifacts:
#   files:
#     - imagedefinitions.json
